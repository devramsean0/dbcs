import type { CategoryChannel, Channel, DMChannel, NewsChannel, PartialDMChannel, PartialGroupDMChannel, StageChannel, StoreChannel, TextChannel, ThreadChannel, VoiceChannel } from 'discord.js';
import type { ChannelTypes, GuildTextBasedChannelTypes, TextBasedChannelTypes } from './utility-types';
import { Nullish } from '@sapphire/utilities';
/**
 * Checks whether a given channel is a {@link CategoryChannel}
 * @param channel The channel to check
 */
export declare function isCategoryChannel(channel: ChannelTypes | Nullish): channel is CategoryChannel;
/**
 * Checks whether a given channel is a {@link DMChannel}
 * @param channel The channel to check
 */
export declare function isDMChannel(channel: ChannelTypes | Nullish): channel is DMChannel | PartialDMChannel;
/**
 * Checks whether a given channel is a {@link PartialGroupDMChannel}
 * @param channel The channel to check
 */
export declare function isGroupChannel(channel: Channel | PartialDMChannel | Nullish): channel is PartialGroupDMChannel;
/**
 * Checks if a channel comes from a guild.
 * @param channel The channel to check
 * @returns Whether or not the channel is guild-based.
 */
export declare function isGuildBasedChannel(channel: ChannelTypes | Nullish): channel is GuildTextBasedChannelTypes;
/**
 * Checks whether or not a channel comes from a guild.
 * @remark As opposed to {@link isGuildBasedChannel} this checks if there is `guild` property on the channel.
 * @param channel The channel to check.
 * @returns Whether or not the channel is guild-based.
 */
export declare function isGuildBasedChannelByGuildKey(channel: ChannelTypes | Nullish): channel is GuildTextBasedChannelTypes;
/**
 * Checks whether a given channel is a {@link NewsChannel}.
 * @param channel The channel to check.
 */
export declare function isNewsChannel(channel: ChannelTypes | Nullish): channel is NewsChannel;
/**
 * Checks whether a given channel is a {@link StoreChannel}
 * @param channel The channel to check
 */
export declare function isStoreChannel(channel: ChannelTypes | Nullish): channel is StoreChannel;
/**
 * Checks whether a given channel is a {@link TextChannel}.
 * @param channel The channel to check.
 */
export declare function isTextChannel(channel: ChannelTypes | Nullish): channel is TextChannel;
/**
 * Checks whether a given channel is a {@link VoiceChannel}
 * @param channel The channel to check
 */
export declare function isVoiceChannel(channel: ChannelTypes | Nullish): channel is VoiceChannel;
/**
 * Checks whether a given channel is a {@link StageChannel}
 * @param channel The channel to check
 */
export declare function isStageChannel(channel: ChannelTypes | Nullish): channel is StageChannel;
/**
 * Checks whether a given channel is a {@link ThreadChannel}
 * @param channel The channel to check.
 */
export declare function isThreadChannel(channel: ChannelTypes | Nullish): channel is ThreadChannel;
/**
 * Checks whether a given channel is a News {@link ThreadChannel}
 * @param channel The channel to check.
 */
export declare function isNewsThreadChannel(channel: ChannelTypes | Nullish): channel is ThreadChannel;
/**
 * Checks whether a given channel is a Public {@link ThreadChannel}
 * @param channel The channel to check.
 */
export declare function isPublicThreadChannel(channel: ChannelTypes | Nullish): channel is ThreadChannel;
/**
 * Checks whether a given channel is a Private {@link ThreadChannel}
 * @param channel The channel to check.
 */
export declare function isPrivateThreadChannel(channel: ChannelTypes | Nullish): channel is ThreadChannel;
/**
 * Checks whether a given channel is a {@link TextBasedChannelTypes}. This means it has a `send` method.
 * @param channel The channel to check.
 */
export declare function isTextBasedChannel(channel: ChannelTypes | Nullish): channel is TextBasedChannelTypes;
/**
 * Checks whether a given channel allows NSFW content or not
 * @param channel The channel to check.
 */
export declare function isNsfwChannel(channel: ChannelTypes | Nullish): boolean;
//# sourceMappingURL=type-guards.d.ts.map