import { MessageEmbed, MessageEmbedOptions } from 'discord.js';
import { PaginatedMessage } from './PaginatedMessage';
/**
 * This is a utility of {@link PaginatedMessage}, except it exclusively paginates the fields of an embed.
 * You must either use this class directly or extend it.
 *
 * @example
 * ```typescript
 * import { PaginatedFieldMessageEmbed } from '@sapphire/discord.js-utilities';
 *
 * new PaginatedFieldMessageEmbed()
 *    .setTitleField('Test pager field')
 *    .setTemplate({ embed })
 *    .setItems([
 *       { title: 'Sapphire Framework', value: 'discord.js Framework' },
 *       { title: 'Sapphire Framework 2', value: 'discord.js Framework 2' },
 *       { title: 'Sapphire Framework 3', value: 'discord.js Framework 3' }
 *     ])
 *    .formatItems((item) => `${item.title}\n${item.value}`)
 *    .setItemsPerPage(2)
 *    .make()
 *    .run(message);
 * ```
 */
export declare class PaginatedFieldMessageEmbed<T> extends PaginatedMessage {
    private embedTemplate;
    private totalPages;
    private items;
    private itemsPerPage;
    private fieldTitle;
    /**
     * Set the items to paginate.
     * @param items The pages to set
     */
    setItems(items: T[]): this;
    /**
     * Set the title of the embed field that will be used to paginate the items.
     * @param title The field title
     */
    setTitleField(title: string): this;
    /**
     * Sets the amount of items that should be shown per page.
     * @param itemsPerPage The number of items
     */
    setItemsPerPage(itemsPerPage: number): this;
    /**
     * Sets the template to be used to display the embed fields as pages. This template can either be set from a template {@link MessageEmbed} instance or an object with embed options.
     *
     * @param template MessageEmbed
     *
     * @example
     * ```typescript
     * import { PaginatedFieldMessageEmbed } from '@sapphire/discord.js-utilities';
     * import { MessageEmbed } from 'discord.js';
     *
     * new PaginatedFieldMessageEmbed().setTemplate(new MessageEmbed().setTitle('Test pager embed')).make().run(message.author, message.channel);
     * ```
     *
     * @example
     * ```typescript
     * import { PaginatedFieldMessageEmbed } from '@sapphire/discord.js-utilities';
     * import { MessageEmbed } from 'discord.js';
     *
     * new PaginatedFieldMessageEmbed().setTemplate({ title: 'Test pager embed' }).make().run(message.author, message.channel);
     * ```
     */
    setTemplate(template: MessageEmbedOptions | MessageEmbed): this;
    /**
     * Sets a format callback that will be mapped to each embed field in the array of items when the embed is paginated. This should convert each item to a format that is either text itself or can be serialized as text.
     *
     * @example
     * ```typescript
     * import { PaginatedFieldMessageEmbed } from '@sapphire/discord.js-utilities';
     *
     * new PaginatedFieldMessageEmbed()
     *    .setTitleField('Test field')
     *    .setTemplate({ embed })
     *    .setItems([
     *       { title: 'Sapphire Framework', value: 'discord.js Framework' },
     *       { title: 'Sapphire Framework 2', value: 'discord.js Framework 2' },
     *       { title: 'Sapphire Framework 3', value: 'discord.js Framework 3' }
     *     ])
     *    .formatItems((item) => `${item.title}\n${item.value}`)
     *    .make()
     *    .run(message);
     * ```
     * @param value The formatter callback to be applied to each embed item
     */
    formatItems(formatter: (item: T, index: number, array: T[]) => any): this;
    /**
     * Build the pages of the given array.
     *
     * You must call the [[PaginatedFieldMessageEmbed.make]] and [[PaginatedFieldMessageEmbed.run]] methods last, in that order, for the pagination to work.
     *
     * @example
     * ```typescript
     * import { PaginatedFieldMessageEmbed } from '@sapphire/discord.js-utilities';
     *
     * new PaginatedFieldMessageEmbed()
     *    .setTitleField('Test field')
     *    .setTemplate({ embed })
     *    .setItems([
     *       { title: 'Sapphire Framework', value: 'discord.js Framework' },
     *       { title: 'Sapphire Framework 2', value: 'discord.js Framework 2' },
     *       { title: 'Sapphire Framework 3', value: 'discord.js Framework 3' }
     *     ])
     *    .formatItems((item) => `${item.title}\n${item.value}`)
     *    .make()
     *    .run(message);
     * ```
     */
    make(): this;
    private generatePages;
    private paginateArray;
}
//# sourceMappingURL=PaginatedFieldMessageEmbed.d.ts.map